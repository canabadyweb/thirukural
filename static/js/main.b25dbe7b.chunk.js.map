{"version":3,"sources":["components/Footer.js","components/About.js","constants/index.js","helpers/index.js","service/Thirukural.js","service/Quiz.js","service/FindExplanationQuiz.js","service/FindKuralQuiz.js","components/QuizFilters.js","components/FindExplanationQuiz.js","components/FindKuralQuiz.js","components/CommonQuiz.js","components/Kurals.js","service/Samacheer.js","components/SamacheerQuiz.js","components/Main.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Navbar","variant","bg","Container","About","Row","Col","rel","target","href","APP_NAME","KURAL","FIND_EXPLANATION","FIND_KURAL","PAAL","ADHIKARAM","EXPLANATION","NEXT","SUBMIT","GENERAL","CLASS_SUFFIX","TERM","SEQUENTIAL_QUIZ_ORDER","QUIZ_ORDERS","FIND_EXPLANATION_QUIZ_TYPE","FIND_KURAL_QUIZ_TYPE","randomInteger","min","max","Math","floor","random","shuffleItems","array","map","value","sort","a","b","getAdhikarams","paal","getAdhikaramsAndKurals","item","no","aadhikaramNo","name","adhikaramName","thirukurals","filter","thirukural","getKurals","kuralNo","kurals","getRandomKuralFrom","adhikaramsAndKurals","randomAdhikaramIdx","length","randomKuralIdx","KURALS_PER_ADHIKARAM_COUNT","kural","getRandomKurals","kuralNoToSkip","paaltoUse","n","randomKurals","randomKural","foundIdx","findIndex","k","JSON","stringify","push","getKuralByKuralNumber","some","find","getExplanationByAuthor","explanations","explanationAuthor","explanation","author","getAnswerKural","paals","adhikarams","filteredThirukurals","includes","getRandomKural","getAnswerKuralByKuralNumbers","kuralNumbers","randomKuralNo","getKuralByKuralNumbers","getExplanations","answerKural","incorrectExplanations","skipKuralNo","reduce","accumulator","concat","getRandomExplanations","isCorrect","correctExplanation","inCorrectKurals","correctKural","QuizFilters","onApply","hasAdhikaramSelector","hasPaalSelector","hasTermSelector","hasQuizOrderSelector","useState","selectedPaals","setSelectedPaals","selectedAdhikarams","setSelectedAdhikarams","selectedTerms","setSelectedTerms","defaultExplanationAuthor","explanationAuthors","selectedExplanationAuthor","setSelectedExplanationAuthor","setAdhikarams","selectedQuizOrder","setSelectedQuizOrder","useEffect","allAdhikarams","Accordion","Item","eventKey","Header","Body","Form","onSubmit","e","terms","quizOrder","preventDefault","Group","Label","id","options","placeholder","selected","onChange","multiple","labelKey","option","Object","entries","idx","key","Check","type","label","checked","toString","Button","onClick","FindExplanationQuiz","heading","quiz","filterProps","onFilterChange","onNextQuiz","selectedExplanation","setSelectedExplanation","isCorrectAnswer","setIsCorrectAnswer","showResult","setShowResult","data","Card","Alert","show","Badge","disabled","FindKuralQuiz","selectedKural","setSelectedKural","CommonQuiz","setQuiz","filters","setFilters","quizType","useParams","quizTypeMapping","title","useTitle","adhikaram","handleFilterChange","handleNextQuiz","Kurals","selectedPaal","setSelectedPaal","selectedAdhikaram","setSelectedAdhikaram","setKurals","event","md","span","offset","values","Control","as","Tabs","defaultActiveKey","Tab","getKuralNumbers","classNo","termKuralNumbers","samacheerKurals","term","parseInt","flat","SamacheerQuiz","usedKuralNumbers","setUsedKuralNumbers","showSummary","setShowSummary","samacheerClass","kuralNumber","getAnswerKuralByKuralNumber","updatedUsedKuralNumbers","every","handleSummaryClose","Modal","onHide","backdrop","keyboard","closeButton","Title","Main","exact","path","component","renderSamacheerClasses","route","NavDropdown","Array","TO_SAMACHEER_CLASS","fill","start","expand","fixed","Brand","Toggle","Collapse","Nav","Divider","Link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.b25dbe7b.chunk.js","sourcesContent":["import { Container, Navbar } from \"react-bootstrap\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"fixed-bottom\">\n      <Navbar variant=\"light\" bg=\"light\">\n        <Container>\n        </Container>\n      </Navbar>\n    </footer>\n  )\n}\n\nexport default Footer","import { Col, Container, Row } from \"react-bootstrap\"\n\nconst About = () => {\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col>\n          <p>\n            திருக்குறள் கற்போம் வலைத்தளம் திருக்குறளை அர்த்தம் புரிந்து கற்றுக்கொள்ள உருவாக்கப்பட்டது. அனைவரும் (குறிப்பாக பள்ளிக்குழந்தைகள்) குறள்களை அர்த்தம் அறிந்து மனப்பாடம் செய்துகொள்ள வினாடி வினாக்கள் குறள்களின் விளக்கத்தின் அடிப்படியில் வடிவகைமைக்கப்பட்டுள்ளது. மேலும் தமிழ் நாடு சமச்சீர் கல்வி பாடத்திட்டத்தில் உள்ள குறள்களுக்கு வகுப்புவாரியாக வினாடி வினாக்கள் அமைக்கப்பட்டுள்ளது.\n          </p>\n\n          <p>\n            இந்த வலைத்தளத்தின் code Open Source ஆக வைக்கப்பட்டுள்ளது. எனவே இந்த வலைத்தளத்தின் மேம்பாட்டிற்கு நீங்கள் உதவ விரும்பினீர்கள் என்றால் <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/thirukural-karpom/thirukural-karpom#contributing\">இந்த வழிமுறைகளை பின்பற்றவும்</a>.\n          </p>\n\n          <p>\n            இந்த வலைத்தளத்தில் உள்ள குறைகள் அல்லது புதிய அம்சங்கள் பற்றிய ஆலோசனைகளை <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/thirukural-karpom/thirukural-karpom/issues\">இங்கே செய்யலாம்</a>.\n          </p>\n\n          <p>\n            இந்த வலைத்தளம் பற்றிய உங்கள் கருத்துக்களை தெரிவிக்க <a href=\"mailto:arunvelsriram@gmail.com\">arunvelsriram@gmail.com</a> என்ற முகவரிக்கு மின்னஞ்சல் அனுப்பவும்.\n          </p>\n\n          <p>\n            வந்தே மாதரம்! வாழ்க நம் பாரதம்! ஜெய் ஹிந்த்!\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default About\n","export const APP_NAME = \"திருக்குறள் கற்போம்\",\n  KURALS = \"குறள்கள்\",\n  KURAL = \"குறள்\",\n  QUIZ = \"வினாவிடை\",\n  FIND_EXPLANATION = \"விளக்கம் கண்டுபிடி\",\n  FIND_KURAL = \"குறள் கண்டுபிடி\",\n  PAAL = \"பால்\",\n  ADHIKARAM = \"அதிகாரம்\",\n  AUTHOR_COUNT = 3,\n  KURALS_PER_ADHIKARAM_COUNT = 10,\n  ADHIKARAM_COUNT = 133,\n  CORRECT_EXPLANATION_MESSAGE = \"சபாஷ்! சரியான விளக்கத்தை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_EXPLANATION_MESSAGE = \"தவறான விளக்கத்தை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  CORRECT_KURAL_MESSAGE = \"சபாஷ்! சரியான குறளை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_KURAL_MESSAGE = \"தவறான குறளை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  EXPLANATION = \"விளக்கம்\",\n  FILTERS = \"வடிப்பான்கள்\",\n  CLEAR = \"அழி\",\n  NEXT = \"அடுத்து\",\n  SUBMIT = \"சமர்ப்பி\",\n  GENERAL = \"பொது\",\n  CLASS_SUFFIX = \"ம் வகுப்பு\",\n  FROM_SAMACHEER_CLASS = 6,\n  TO_SAMACHEER_CLASS = 6,\n  SAMACHEER_EDUCATION = \"சமச்சீர் கல்வி\",\n  TERM = \"பருவம்\",\n  QUIZ_ORDER = \"கேள்வி வரிசை\",\n  RANDOM_QUIZ_ORDER = \"random\",\n  SEQUENTIAL_QUIZ_ORDER = \"sequential\",\n  QUIZ_ORDERS = { [SEQUENTIAL_QUIZ_ORDER]: \"தொடர்ச்சியான வரிசை\", [RANDOM_QUIZ_ORDER]: \"சீரற்ற வரிசை\" },\n  SUMMARY_CLOSE = \"மீண்டும் தொடங்கு\",\n  SUMMARY_TITLE = \"முடிவு\",\n  SUMMARY_TEXT = \"சபாஷ்! அனைத்து கேள்விகளையும் முடித்துவிடீர்கள்.\",\n  FIND_EXPLANATION_QUIZ_TYPE = \"find-explanation\",\n  FIND_KURAL_QUIZ_TYPE = \"find-kural\",\n  ABOUT_WEBSITE = \"வலைத்தளம் பற்றி\"\n","\nconst randomInteger = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n\nconst shuffleItems = (array) => {\n  return array\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n}\n\nconst log = (...args) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.log(...args)\n  }\n}\n\nexport { randomInteger, shuffleItems, log }\n","import thirukurals from \"../data/thirukurals.json\"\n\nconst getAdhikarams = (paal) => (\n  getAdhikaramsAndKurals(paal)\n    .map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAllAdhikarams = () => (\n  thirukurals.map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAdhikaramsAndKurals = (paal) => {\n  return thirukurals.filter((thirukural) => thirukural.paal === paal)\n}\n\nconst getKurals = (kuralNo) => thirukurals[kuralNo - 1].kurals\n\nconst getPaal = (kuralNo) => (\n  thirukurals\n    .find((thirukural) =>\n      thirukural.kurals\n        .find((kural) => kural.kuralNo === kuralNo))\n    .paal\n)\n\nexport { getAdhikarams, getKurals, getPaal, getAdhikaramsAndKurals, getAllAdhikarams }\n","import { KURALS_PER_ADHIKARAM_COUNT } from \"../constants\"\nimport thirukurals from \"../data/thirukurals.json\"\nimport { log, randomInteger } from \"../helpers\"\nimport { getAdhikaramsAndKurals } from \"./Thirukural\"\n\nconst getRandomKuralFrom = (adhikaramsAndKurals) => {\n  const randomAdhikaramIdx = randomInteger(0, adhikaramsAndKurals.length - 1)\n  const randomKuralIdx = randomInteger(0, KURALS_PER_ADHIKARAM_COUNT - 1)\n  log(`getting random kural, adhikaramIdx: ${randomAdhikaramIdx} kuralIdx: ${randomKuralIdx}`)\n  const { kurals, paal } = adhikaramsAndKurals[randomAdhikaramIdx]\n  const kural = kurals[randomKuralIdx]\n  return { ...kural, paal }\n}\n\nconst getRandomKurals = (kuralNoToSkip, paaltoUse, n = 3) => {\n  const adhikaramsAndKurals = getAdhikaramsAndKurals(paaltoUse)\n  const randomKurals = []\n  while (randomKurals.length < n) {\n    const randomKural = getRandomKuralFrom(adhikaramsAndKurals)\n    const foundIdx = randomKurals.findIndex((k) => k.kuralNo === randomKural.kuralNo)\n    log(`generating random kurals, randomKural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    if (randomKural.kuralNo !== kuralNoToSkip.kuralNo && foundIdx === -1) {\n      log(`choosing random kural: ${JSON.stringify(randomKural)}`)\n      randomKurals.push(randomKural)\n    } else {\n      log(`skipping random kural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    }\n  }\n  return randomKurals\n}\n\nconst getRandomExplanations = (paal, explanationAuthor, skipKuralNo, n = 3) => {\n  const randomKurals = getRandomKurals(skipKuralNo, paal, n)\n  log(`random kurals used for generating explanations: ${JSON.stringify(randomKurals)}`)\n  return randomKurals.reduce((accumulator, kural) => {\n    const explanation = getExplanationByAuthor(kural.explanations, explanationAuthor)\n    return accumulator.concat(explanation)\n  }, [])\n}\n\nconst getRandomKural = (paals, adhikarams) => {\n  let filteredThirukurals = thirukurals\n  if (paals.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => paals.includes(thirukural.paal))\n  }\n  if (adhikarams.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => adhikarams.includes(thirukural.adhikaramName))\n  }\n  return getRandomKuralFrom(filteredThirukurals)\n}\n\nconst getKuralByKuralNumber = (kuralNo) => {\n  let kural = {}\n  let paal = \"\"\n  thirukurals.some(item => {\n    kural = item.kurals.find(kural =>\n      kural.kuralNo === kuralNo\n    )\n    if (kural) {\n      paal = item.paal\n      return true\n    }\n    return false\n  })\n  return { ...kural, paal }\n}\n\nconst getKuralByKuralNumbers = (kuralNumbers) => {\n  const randomIdx = randomInteger(0, kuralNumbers.length - 1)\n  const randomKuralNo = kuralNumbers[randomIdx]\n  return getKuralByKuralNumber(randomKuralNo)\n}\n\nconst getExplanationByAuthor = (explanations, explanationAuthor) => (\n  explanations\n    .find((explanation) => explanation.author === explanationAuthor)\n    .explanation\n)\n\nconst getAnswerKural = (paals, adhikarams, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getRandomKural(paals, adhikarams)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nconst getAnswerKuralByKuralNumbers = (kuralNumbers, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getKuralByKuralNumbers(kuralNumbers)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nconst getAnswerKuralByKuralNumber = (kuralNumber, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getKuralByKuralNumber(kuralNumber)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nexport { getRandomKurals, getRandomExplanations, getAnswerKural, getAnswerKuralByKuralNumbers, getAnswerKuralByKuralNumber }\n","import { log, shuffleItems } from \"../helpers\"\nimport { getRandomExplanations } from \"./Quiz\"\n\nconst getExplanations = (answerKural, explanationAuthor) => {\n  const { kuralNo, paal, explanation } = answerKural\n  const incorrectExplanations = getRandomExplanations(paal, explanationAuthor, kuralNo)\n    .map((explanation) => ({ explanation, isCorrect: false }))\n  const correctExplanation = { explanation, isCorrect: true }\n  const explanations = shuffleItems([...incorrectExplanations, correctExplanation])\n  log(`shuffled explanations: ${JSON.stringify(explanations)}`)\n  return explanations\n}\n\nexport { getExplanations }\n","import { log, shuffleItems } from \"../helpers\"\nimport { getRandomKurals } from \"./Quiz\"\n\nconst getKurals = (answerKural) => {\n  const { kuralNo, kural, paal } = answerKural\n  const inCorrectKurals = getRandomKurals(kuralNo, paal)\n    .map(({ kural }) => ({ kural, isCorrect: false }))\n  const correctKural = { kural, isCorrect: true }\n  const kurals = shuffleItems([...inCorrectKurals, correctKural])\n  log(`shuffled kurals: ${JSON.stringify(kurals)}`)\n  return kurals\n}\n\nexport { getKurals }\n","import { useEffect, useState } from \"react\"\nimport { Accordion, Button, Col, Form, Row } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { ADHIKARAM, CLEAR, EXPLANATION, FILTERS, PAAL, QUIZ_ORDER, QUIZ_ORDERS, SEQUENTIAL_QUIZ_ORDER, SUBMIT, TERM } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport paals from \"../data/paals.json\"\nimport { log } from \"../helpers\"\nimport { getAdhikarams, getAllAdhikarams } from \"../service/Thirukural\"\n\nconst QuizFilters = ({ onApply, hasAdhikaramSelector = true, hasPaalSelector = true, hasTermSelector = false, hasQuizOrderSelector = false }) => {\n  const [selectedPaals, setSelectedPaals] = useState([])\n  const [selectedAdhikarams, setSelectedAdhikarams] = useState([])\n  const [selectedTerms, setSelectedTerms] = useState([])\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [selectedExplanationAuthor, setSelectedExplanationAuthor] = useState([defaultExplanationAuthor])\n  const [adhikarams, setAdhikarams] = useState(null)\n  const [selectedQuizOrder, setSelectedQuizOrder] = useState(null)\n\n  useEffect(() => {\n    log(\">>>>> side-effect - quiz filters: adhikarams\")\n    if (!adhikarams) {\n      const allAdhikarams = getAllAdhikarams()\n      setAdhikarams(allAdhikarams)\n    }\n    log(\"<<<<< side-effect - quiz filters: adhikarams\")\n  }, [adhikarams])\n\n  useEffect(() => {\n    log(\">>>>> side-effect - quiz filters: selectedQuizOrder\")\n    if (!selectedQuizOrder) {\n      setSelectedQuizOrder(SEQUENTIAL_QUIZ_ORDER)\n    }\n    log(\"<<<<< side-effect - quiz filters: selectedQuizOrder\")\n  }, [selectedQuizOrder])\n\n  const handleOnSubmit = (e) => {\n    log(\"handle filter form submit\")\n    onApply({\n      paals: selectedPaals,\n      adhikarams: selectedAdhikarams,\n      terms: selectedTerms,\n      explanationAuthor: selectedExplanationAuthor[0],\n      quizOrder: selectedQuizOrder\n    })\n    e.preventDefault()\n  }\n\n  const handleClear = () => {\n    log(\"handle clear filter\")\n    setSelectedPaals([])\n    setSelectedAdhikarams([])\n    setSelectedTerms([])\n    setSelectedExplanationAuthor([defaultExplanationAuthor])\n    setAdhikarams(null)\n    setSelectedQuizOrder(null)\n  }\n\n  const handlePaalChange = (paals) => {\n    log(`handle paal change in filter, paals: ${paals}`)\n    const adhikarams = paals.reduce((accumulator, paal) => accumulator.concat(...getAdhikarams(paal)), [])\n    log(`handle paal change in filter, adhikarams: ${JSON.stringify(adhikarams)}`)\n    setSelectedPaals(paals)\n    setAdhikarams(adhikarams.length ? adhikarams : null)\n    setSelectedAdhikarams([])\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>{FILTERS}</Accordion.Header>\n            <Accordion.Body>\n              <Form onSubmit={handleOnSubmit}>\n                {\n                  hasPaalSelector ?\n                    <Form.Group>\n                      <Form.Label>{PAAL}</Form.Label>\n                      <Typeahead\n                        id=\"paal-selector\"\n                        options={paals}\n                        placeholder={PAAL}\n                        selected={selectedPaals}\n                        onChange={handlePaalChange}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasAdhikaramSelector ?\n                    <Form.Group>\n                      <Form.Label>{ADHIKARAM}</Form.Label>\n                      <Typeahead\n                        id=\"adhikaram-selector\"\n                        labelKey={(option) => `${option.no} - ${option.name}`}\n                        options={adhikarams ? adhikarams : []}\n                        placeholder={ADHIKARAM}\n                        selected={selectedAdhikarams}\n                        onChange={setSelectedAdhikarams}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasQuizOrderSelector ?\n                    <Form.Group>\n                      <Form.Label>{QUIZ_ORDER}</Form.Label>\n                      {\n                        Object.entries(QUIZ_ORDERS).map(([key, value], idx) => (\n                          <Form.Check\n                            key={idx}\n                            id={`${key}-quiz-order`}\n                            type=\"radio\"\n                            label={value}\n                            name=\"quiz-order\"\n                            value={key}\n                            onChange={(e) => setSelectedQuizOrder(e.target.value)}\n                            checked={selectedQuizOrder === key}\n                          />\n                        ))\n                      }\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasTermSelector ?\n                    <Form.Group>\n                      <Form.Label>{TERM}</Form.Label>\n                      <Typeahead\n                        id=\"term-selector\"\n                        labelKey={(option) => `${TERM} ${option}`}\n                        options={[1, 2, 3].map(option => option.toString())}\n                        placeholder={TERM}\n                        selected={selectedTerms}\n                        onChange={setSelectedTerms}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                <Form.Group>\n                  <Form.Label>{EXPLANATION}</Form.Label>\n                  <Typeahead\n                    id=\"explanation-author-selector\"\n                    options={explanationAuthors}\n                    placeholder={EXPLANATION}\n                    selected={selectedExplanationAuthor}\n                    onChange={setSelectedExplanationAuthor}\n                  />\n                </Form.Group>\n                <Form.Group className=\"mt-3\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\">\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    type=\"button\"\n                    onClick={handleClear}\n                    className=\"mx-2\">\n                    <i className=\"bi bi-x\"></i> {CLEAR}\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      </Col>\n    </Row>\n  )\n}\n\nexport default QuizFilters","import { useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Form, Row } from \"react-bootstrap\"\nimport { CORRECT_EXPLANATION_MESSAGE, KURAL, NEXT, SUBMIT, WRONG_EXPLANATION_MESSAGE } from \"../constants\"\nimport { log } from \"../helpers\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindExplanationQuiz = ({ heading, quiz, filterProps, onFilterChange, onNextQuiz }) => {\n  const [selectedExplanation, setSelectedExplanation] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n\n  const handleOnSubmit = (e) => {\n    const correctExplanation = quiz.explanations.find((item) => item.isCorrect).explanation\n    log(`handle form submit,\n      selectedExplanation: ${JSON.stringify(selectedExplanation)}\n      correctExplanation: ${JSON.stringify(correctExplanation)}`)\n    setIsCorrectAnswer(selectedExplanation === correctExplanation)\n    setShowResult(true)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedExplanation(null)\n    onNextQuiz()\n    e.preventDefault()\n  }\n\n  const handleApplyFilter = (data) => {\n    log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedExplanation(null)\n    onFilterChange(data)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{`${KURAL} ${quiz.kuralNo}`}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3\">\n          <Col>\n            <Form.Label className=\"kural-text\">{quiz.kural}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.explanations.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`explanation-option-${idx}`}\n              value={item.explanation}\n              name=\"explanations\"\n              type=\"radio\"\n              label={item.explanation}\n              onChange={(e) => setSelectedExplanation(e.target.value)}\n              className=\"mx-3\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{heading}</h2>\n        </Col>\n      </Row>\n      <QuizFilters {...filterProps} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_EXPLANATION_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_EXPLANATION_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\"\n                    disabled={!selectedExplanation}\n                  >\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default FindExplanationQuiz","import { useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Form, Row } from \"react-bootstrap\"\nimport { CORRECT_KURAL_MESSAGE, EXPLANATION, NEXT, SUBMIT, WRONG_KURAL_MESSAGE } from \"../constants\"\nimport { log } from \"../helpers\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindKuralQuiz = ({ heading, quiz, filterProps, onFilterChange, onNextQuiz }) => {\n  const [selectedKural, setSelectedKural] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n\n  const handleOnSubmit = (e) => {\n    const correctKural = quiz.kurals.find((item) => item.isCorrect).kural\n    log(`handle form submit,\n      selectedKural: ${JSON.stringify(selectedKural)}\n      correctKural: ${JSON.stringify(correctKural)}`)\n    setIsCorrectAnswer(selectedKural === correctKural)\n    setShowResult(true)\n    setSelectedKural(null)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedKural(null)\n    onNextQuiz()\n  }\n\n  const handleApplyFilter = (data) => {\n    log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedKural(null)\n    onFilterChange(data)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{EXPLANATION}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3 fs-5\">\n          <Col>\n            <Form.Label>{quiz.explanation}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.kurals.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`kural-option-${idx}`}\n              value={item.kural}\n              name=\"kurals\"\n              type=\"radio\"\n              label={item.kural}\n              onChange={(e) => setSelectedKural(e.target.value)}\n              className=\"fs-6 mx-3 kural-text\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{heading}</h2>\n        </Col>\n      </Row>\n      <QuizFilters {...filterProps} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_KURAL_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_KURAL_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\"\n                    disabled={!selectedKural}\n                  >\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default FindKuralQuiz","import { useEffect, useState } from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useParams } from \"react-router\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, FIND_EXPLANATION, FIND_EXPLANATION_QUIZ_TYPE, FIND_KURAL, FIND_KURAL_QUIZ_TYPE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport { log } from \"../helpers\"\nimport { getExplanations } from \"../service/FindExplanationQuiz\"\nimport { getKurals } from \"../service/FindKuralQuiz\"\nimport { getAnswerKural } from \"../service/Quiz\"\nimport FindExplanationQuiz from \"./FindExplanationQuiz\"\nimport FindKuralQuiz from \"./FindKuralQuiz\"\n\nconst CommonQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    paals: [],\n    adhikarams: [],\n    explanationAuthor: defaultExplanationAuthor\n  })\n\n  const { quizType } = useParams()\n  const quizTypeMapping = {\n    [FIND_EXPLANATION_QUIZ_TYPE]: {\n      title: `${FIND_EXPLANATION} | ${APP_NAME}`,\n      heading: FIND_EXPLANATION\n    },\n    [FIND_KURAL_QUIZ_TYPE]: {\n      title: `${FIND_KURAL} | ${APP_NAME}`,\n      heading: FIND_KURAL\n    }\n  }\n\n  useTitle(quizTypeMapping[quizType].title)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!quiz) {\n      const { paals, adhikarams, explanationAuthor } = filters\n      const answerKural = getAnswerKural(paals, adhikarams.map(adhikaram => adhikaram.name), explanationAuthor)\n      log(`answer kural: ${answerKural}`)\n      const { kuralNo, kural, explanation } = answerKural\n\n      let quiz = {}\n      if (quizType === FIND_KURAL_QUIZ_TYPE) {\n        const kurals = getKurals(answerKural)\n        log(`kurals used for choices: ${kurals}`)\n        quiz = { explanation, kurals }\n      } else {\n        const explanations = getExplanations(answerKural, explanationAuthor)\n        log(`explanations used for choices: ${JSON.stringify(explanations)}`)\n        quiz = { kuralNo, kural, explanations }\n      }\n      log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n    }\n    log(\"<<<<< side-effect\")\n  }, [quiz, filters, quizType])\n\n  const handleFilterChange = (filters) => {\n    setFilters(filters)\n    setQuiz(null)\n  }\n\n  const handleNextQuiz = () => {\n    setQuiz(null)\n  }\n\n  return (\n    <Container>\n      {\n        quizType === FIND_KURAL_QUIZ_TYPE ?\n          <FindKuralQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n          />\n          :\n          <FindExplanationQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n          />\n      }\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CommonQuiz","import React, { useEffect, useState } from \"react\"\nimport { Badge, Button, Card, Col, Container, Form, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { useTitle } from \"react-use\"\nimport { ADHIKARAM, APP_NAME, KURAL, KURALS, PAAL, SUBMIT } from \"../constants\"\nimport paals from \"../data/paals.json\"\nimport { log } from \"../helpers\"\nimport { getAdhikarams, getKurals } from \"../service/Thirukural\"\n\nconst Kurals = () => {\n  const [selectedPaal, setSelectedPaal] = useState(null);\n  const [adhikarams, setAdhikarams] = useState([]);\n  const [selectedAdhikaram, setSelectedAdhikaram] = useState(null)\n  const [kurals, setKurals] = useState([])\n\n  useTitle(`${KURALS} | ${APP_NAME}`)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!selectedPaal) {\n      const paal = paals[0]\n      const adhikarams = getAdhikarams(paal)\n      log(`adhikarams for ${paal}: ${adhikarams}`)\n      const adhikaram = adhikarams[0]\n      const kurals = getKurals(adhikaram.no)\n      log(`kurals for ${adhikaram.no}-${adhikaram.name}: ${JSON.stringify(kurals)}`)\n\n      setSelectedPaal([paal])\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikaram])\n      setKurals(kurals)\n    }\n    log(\"<<<<< side-effect\")\n  }, [selectedPaal])\n\n  const handleSubmit = (event) => {\n    log(\"handle form submit\")\n    const adhikaram = selectedAdhikaram[0]\n    log(`get kurals for adhikaram: ${adhikaram}`)\n    const kurals = getKurals(adhikaram.no)\n    log(`kurals: ${JSON.stringify(kurals)}`)\n    setKurals(kurals)\n    event.preventDefault()\n  }\n\n  const handlePaalChange = (values) => {\n    log(`handle paal change, values: ${values}`)\n    setSelectedPaal(values)\n    if (values.length) {\n      const [paal] = values\n      const adhikarams = getAdhikarams(paal)\n      log(`adhikarams for ${paal}: ${adhikarams}`)\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikarams[0]])\n    }\n  }\n\n  const renderKurals = () => (\n    kurals.map((k, idx) => (\n      <Row key={idx} className=\"my-3\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Row className=\"fs-5\">\n                <Col >\n                  <Badge bg=\"primary\">{`${KURAL} ${k.kuralNo}`}</Badge>\n                </Col>\n              </Row>\n              <Row className=\"my-3\">\n                <Col className=\"kural-text\">\n                  {k.kural}\n                </Col>\n              </Row>\n              <Tabs defaultActiveKey=\"0\" className=\"my-3\">\n                {k.explanations.map((e, idx) => (<Tab key={idx} eventKey={idx} title={e.author}>{e.explanation}</Tab>))}\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    ))\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-3\">\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col md={{ span: 4, offset: 1 }}>\n                <Form.Group>\n                  <Form.Label>{PAAL}</Form.Label>\n                  <Typeahead\n                    id=\"paal-selector\"\n                    onChange={handlePaalChange}\n                    options={paals}\n                    placeholder={PAAL}\n                    selected={selectedPaal !== null ? selectedPaal : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>{ADHIKARAM}</Form.Label>\n                  <Typeahead\n                    id=\"adhikaram-selector\"\n                    onChange={setSelectedAdhikaram}\n                    labelKey={(option) => `${option.no} - ${option.name}`}\n                    options={adhikarams}\n                    placeholder={ADHIKARAM}\n                    selected={selectedAdhikaram !== null ? selectedAdhikaram : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control as={Button} type=\"submit\">\n                    {SUBMIT}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n\n      {renderKurals()}\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Kurals\n","import { FROM_SAMACHEER_CLASS, TO_SAMACHEER_CLASS } from \"../constants\"\nimport samacheerKurals from \"../data/samacheer-kurals.json\"\n\nconst getKuralNumbers = (classNo, terms = []) => {\n  const termKuralNumbers = samacheerKurals[classNo]\n  if (terms.length) {\n    terms = terms.map(term => parseInt(term))\n    return termKuralNumbers.reduce((accumulator, kuralNumbers, idx) =>\n      (terms.includes(idx + 1) ? accumulator.concat(...kuralNumbers) : accumulator), [])\n  }\n  return termKuralNumbers.flat()\n}\n\nconst getClassNumbers = () => {\n  return Array(TO_SAMACHEER_CLASS - FROM_SAMACHEER_CLASS + 1)\n    .fill(FROM_SAMACHEER_CLASS)\n    .map((start, idx) => start + idx)\n}\n\nexport { getClassNumbers, getKuralNumbers }\n","import { useEffect, useState } from \"react\"\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\"\nimport { useParams } from \"react-router\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, CLASS_SUFFIX, SUMMARY_CLOSE, FIND_EXPLANATION, FIND_EXPLANATION_QUIZ_TYPE, FIND_KURAL, FIND_KURAL_QUIZ_TYPE, SEQUENTIAL_QUIZ_ORDER, SUMMARY_TEXT, SUMMARY_TITLE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport { log } from \"../helpers\"\nimport { getExplanations } from \"../service/FindExplanationQuiz\"\nimport { getKurals } from \"../service/FindKuralQuiz\"\nimport { getAnswerKuralByKuralNumber, getAnswerKuralByKuralNumbers } from \"../service/Quiz\"\nimport { getKuralNumbers } from \"../service/Samacheer\"\nimport FindExplanationQuiz from \"./FindExplanationQuiz\"\nimport FindKuralQuiz from \"./FindKuralQuiz\"\n\nconst SamacheerQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    terms: [],\n    explanationAuthor: defaultExplanationAuthor,\n    quizOrder: SEQUENTIAL_QUIZ_ORDER\n  })\n  const [usedKuralNumbers, setUsedKuralNumbers] = useState([])\n  const [showSummary, setShowSummary] = useState(false);\n\n  const { quizType, classNo } = useParams()\n  const samacheerClass = `${classNo}-${CLASS_SUFFIX}`\n  const quizTypeMapping = {\n    [FIND_EXPLANATION_QUIZ_TYPE]: {\n      title: `${samacheerClass} | ${FIND_EXPLANATION} | ${APP_NAME}`,\n      heading: `${FIND_EXPLANATION} - ${samacheerClass}`\n    },\n    [FIND_KURAL_QUIZ_TYPE]: {\n      title: `${samacheerClass}  | ${FIND_KURAL} | ${APP_NAME}`,\n      heading: `${FIND_KURAL} - ${samacheerClass}`\n    }\n  }\n\n  useTitle(quizTypeMapping[quizType].title)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!quiz) {\n      const { terms, explanationAuthor, quizOrder } = filters\n      const kuralNumbers = getKuralNumbers(classNo, terms)\n        .filter(no => !usedKuralNumbers.includes(no))\n      log(`kural numbers for class:${classNo} and terms: ${terms} are ${kuralNumbers}`)\n      const answerKural = quizOrder === SEQUENTIAL_QUIZ_ORDER ?\n        getAnswerKuralByKuralNumber(kuralNumbers[0], explanationAuthor)\n        : getAnswerKuralByKuralNumbers(kuralNumbers, explanationAuthor)\n      log(`answer kural: ${answerKural}`)\n      const { kuralNo, kural, explanation } = answerKural\n\n      let quiz = {}\n      if (quizType === FIND_KURAL_QUIZ_TYPE) {\n        const kurals = getKurals(answerKural)\n        log(`kurals used for choices: ${kurals}`)\n        quiz = { explanation, kurals }\n      } else {\n        const explanations = getExplanations(answerKural, explanationAuthor)\n        log(`explanations used for choices: ${JSON.stringify(explanations)}`)\n        quiz = { kuralNo, kural, explanations }\n      }\n      log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n\n      const updatedUsedKuralNumbers = [...usedKuralNumbers, kuralNo]\n      log(`used kural numbers: ${updatedUsedKuralNumbers}`)\n      setUsedKuralNumbers(updatedUsedKuralNumbers)\n    }\n    log(\"<<<<< side-effect\")\n  }, [quiz, filters, classNo, usedKuralNumbers, quizType])\n\n  const handleFilterChange = (filters) => {\n    setFilters(filters)\n    setUsedKuralNumbers([])\n    setQuiz(null)\n  }\n\n  const handleNextQuiz = () => {\n    const { terms } = filters\n    const kuralNumbers = getKuralNumbers(classNo, terms)\n    const areAllKuralsUsed = usedKuralNumbers.length === kuralNumbers.length &&\n      kuralNumbers.every(no => usedKuralNumbers.includes(no))\n    if (areAllKuralsUsed) {\n      log(\"all kurals are used\")\n      setShowSummary(true)\n    } else {\n      setQuiz(null)\n    }\n  }\n\n  const handleSummaryClose = () => {\n    setShowSummary(false)\n    setUsedKuralNumbers([])\n    setQuiz(null)\n  }\n\n  return (\n    <Container>\n      <Modal\n        show={showSummary}\n        onHide={handleSummaryClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{SUMMARY_TITLE}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {SUMMARY_TEXT}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleSummaryClose}>\n            {SUMMARY_CLOSE}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {\n        quizType === FIND_KURAL_QUIZ_TYPE ?\n          <FindKuralQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n            filterProps={{\n              hasPaalSelector: false,\n              hasAdhikaramSelector: false,\n              hasTermSelector: true,\n              hasQuizOrderSelector: true\n            }}\n          />\n          :\n          <FindExplanationQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n            filterProps={{\n              hasPaalSelector: false,\n              hasAdhikaramSelector: false,\n              hasTermSelector: true,\n              hasQuizOrderSelector: true\n            }}\n          />\n      }\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default SamacheerQuiz","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport About from \"./About\"\nimport CommonQuiz from \"./CommonQuiz\"\nimport Kurals from \"./Kurals\"\nimport SamacheerQuiz from \"./SamacheerQuiz\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={Kurals} />\n      <Route exact path=\"/quiz/:quizType\" component={CommonQuiz} />\n      <Route exact path=\"/quiz/:quizType\" component={CommonQuiz} />\n      <Route exact path=\"/quiz/samacheer/:quizType/:classNo\" component={SamacheerQuiz} />\n      <Route exact path=\"/quiz/samacheer/:quizType/:classNo\" component={SamacheerQuiz} />\n      <Route exact path=\"/about\" component={About} />\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import { React } from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { ABOUT_WEBSITE, APP_NAME, CLASS_SUFFIX, FIND_EXPLANATION, FIND_KURAL, GENERAL, SAMACHEER_EDUCATION } from \"../constants\"\nimport { getClassNumbers } from \"../service/Samacheer\"\n\nconst Header = () => {\n\n  const renderSamacheerClasses = (route) => {\n    return (\n      <>\n        <NavDropdown.Header>{SAMACHEER_EDUCATION}</NavDropdown.Header>\n        {\n          getClassNumbers()\n            .map(classNo =>\n              <NavDropdown.Item\n                key={classNo}\n                href={`${route}/${classNo}`}>\n                {`${classNo}-${CLASS_SUFFIX}`}\n              </NavDropdown.Item>\n            )\n        }\n      </>\n    )\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\">{APP_NAME}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav>\n              <NavDropdown title={FIND_EXPLANATION}>\n                <NavDropdown.Item href=\"/quiz/find-explanation\">{GENERAL}</NavDropdown.Item>\n                <NavDropdown.Divider />\n                {renderSamacheerClasses(\"/quiz/samacheer/find-explanation\")}\n              </NavDropdown>\n            </Nav>\n            <Nav>\n              <NavDropdown title={FIND_KURAL}>\n                <NavDropdown.Item href=\"/quiz/find-kural\">{GENERAL}</NavDropdown.Item>\n                <NavDropdown.Divider />\n                {renderSamacheerClasses(\"/quiz/samacheer/find-kural\")}\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/about\">\n                {ABOUT_WEBSITE}\n              </Nav.Link>\n            </Nav>\n            <Nav>\n              <Nav.Link\n                target=\"_blank\"\n                href=\"https://github.com/thirukural-karpom/thirukural-karpom\"\n                className=\"py-0\">\n                <i className=\"bi bi-github fs-4\"></i>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport Analytics from \"react-router-ga\"\nimport App from \"./components/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"./scss/index.scss\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <Analytics id={process.env.REACT_APP_GOOGLE_ANALYTICS_ID}>\n      <App />\n    </Analytics>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}