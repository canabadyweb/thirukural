{"version":3,"sources":["components/Footer.js","constants/index.js","service/Thirukural.js","components/Kurals.js","helpers/index.js","service/Quiz.js","service/FindExplanationQuizGenerator.js","components/QuizFilters.js","components/FindExplanationQuiz.js","service/FindKuralQuizGenerator.js","components/FindKuralQuiz.js","components/Main.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Navbar","variant","bg","Container","APP_NAME","KURAL","FIND_EXPLANATION","FIND_KURAL","PAAL","ADHIKARAM","EXPLANATION","NEXT","SUBMIT","getAdhikarams","paal","getAdhikaramsAndKurals","map","item","no","aadhikaramNo","name","adhikaramName","thirukurals","filter","thirukural","getKurals","kuralNo","kurals","Kurals","useState","selectedPaal","setSelectedPaal","adhikarams","setAdhikarams","selectedAdhikaram","setSelectedAdhikaram","setKurals","useTitle","useEffect","console","log","paals","adhikaram","JSON","stringify","Row","Col","Form","onSubmit","event","preventDefault","md","span","offset","Group","Label","id","onChange","values","length","options","placeholder","selected","labelKey","option","Control","as","Button","type","k","idx","Card","Body","Badge","kural","Tabs","defaultActiveKey","explanations","e","Tab","eventKey","title","author","explanation","randomInteger","min","max","Math","floor","random","shuffleItems","array","value","sort","a","b","getRandomKuralFrom","adhikaramsAndKurals","randomAdhikaramIdx","randomKuralIdx","KURALS_PER_ADHIKARAM_COUNT","getRandomKurals","kuralNoToSkip","paaltoUse","n","randomKurals","randomKural","foundIdx","findIndex","push","getKural","filteredThirukurals","includes","getExplanationByAuthor","explanationAuthor","find","FindExplanationQuizGenerator","this","answerKural","incorrectExplanations","skipKuralNo","reduce","accumulator","concat","getRandomExplanations","isCorrect","correctExplanation","QuizFilters","props","selectedPaals","setSelectedPaals","selectedAdhikarams","setSelectedAdhikarams","defaultExplanationAuthor","selectedExplanationAuthor","setSelectedExplanationAuthor","allAdhikarams","Accordion","Item","Header","onApply","multiple","explanationAuthors","onClick","FindExplanationQuiz","quiz","setQuiz","selectedExplanation","setSelectedExplanation","isCorrectAnswer","setIsCorrectAnswer","showResult","setShowResult","filters","setFilters","quizGenerator","getExplanations","data","Alert","show","Check","label","target","defaultChecked","disabled","FindKuralQuizGenerator","inCorrectKurals","correctKural","FindKuralQuiz","selectedKural","setSelectedKural","getExplanation","Main","exact","path","component","expand","fixed","Brand","href","Toggle","Collapse","Nav","NavDropdown","Link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.703ba7fc.chunk.js","sourcesContent":["import { Container, Navbar } from \"react-bootstrap\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"fixed-bottom\">\n      <Navbar variant=\"light\" bg=\"light\">\n        <Container>\n        </Container>\n      </Navbar>\n    </footer>\n  )\n}\n\nexport default Footer","export const APP_NAME = \"திருக்குறள் கற்போம்\",\n  KURALS = \"குறள்கள்\",\n  KURAL = \"குறள்\",\n  QUIZ = \"வினாவிடை\",\n  FIND_EXPLANATION = \"விளக்கம் கண்டுபிடி\",\n  FIND_KURAL = \"குறள் கண்டுபிடி\",\n  PAAL = \"பால்\",\n  ADHIKARAM = \"அதிகாரம்\",\n  AUTHOR_COUNT = 3,\n  KURALS_PER_ADHIKARAM_COUNT = 10,\n  ADHIKARAM_COUNT = 133,\n  CORRECT_EXPLANATION_MESSAGE = \"சபாஷ்! சரியான விளக்கத்தை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_EXPLANATION_MESSAGE = \"தவறான விளக்கத்தை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  CORRECT_KURAL_MESSAGE = \"சபாஷ்! சரியான குறளை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_KURAL_MESSAGE = \"தவறான குறளை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  EXPLANATION = \"விளக்கம்\",\n  FILTERS = \"வடிப்பான்கள்\",\n  CLEAR = \"அழி\",\n  NEXT = \"அடுத்து\",\n  SUBMIT = \"சமர்ப்பி\"\n","import thirukurals from \"../data/thirukurals.json\"\n\nconst getAdhikarams = (paal) => (\n  getAdhikaramsAndKurals(paal)\n    .map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAllAdhikarams = () => (\n  thirukurals.map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAdhikaramsAndKurals = (paal) => {\n  return thirukurals.filter((thirukural) => thirukural.paal === paal)\n}\n\nconst getKurals = (kuralNo) => thirukurals[kuralNo - 1].kurals\n\nconst getPaal = (kuralNo) => (\n  thirukurals\n    .find((thirukural) =>\n      thirukural.kurals\n        .find((kural) => kural.kuralNo === kuralNo))\n    .paal\n)\n\nexport { getAdhikarams, getKurals, getPaal, getAdhikaramsAndKurals, getAllAdhikarams }\n","import React, { useEffect, useState } from \"react\"\nimport { Badge, Button, Card, Col, Container, Form, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { useTitle } from \"react-use\"\nimport { ADHIKARAM, APP_NAME, KURAL, KURALS, PAAL, SUBMIT } from \"../constants\"\nimport paals from \"../data/paals.json\"\nimport { getAdhikarams, getKurals } from \"../service/Thirukural\"\n\nconst Kurals = () => {\n  const [selectedPaal, setSelectedPaal] = useState(null);\n  const [adhikarams, setAdhikarams] = useState([]);\n  const [selectedAdhikaram, setSelectedAdhikaram] = useState(null)\n  const [kurals, setKurals] = useState([])\n\n  useTitle(`${KURALS} | ${APP_NAME}`)\n\n  useEffect(() => {\n    console.log(\">>>>> side-effect - selectedPaal\")\n    if (!selectedPaal) {\n      const paal = paals[0]\n      const adhikarams = getAdhikarams(paal)\n      console.log(`adhikarams for ${paal}: ${adhikarams}`)\n      const adhikaram = adhikarams[0]\n      const kurals = getKurals(adhikaram.no)\n      console.log(`kurals for ${adhikaram.no}-${adhikaram.name}: ${JSON.stringify(kurals)}`)\n\n      setSelectedPaal([paal])\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikaram])\n      setKurals(kurals)\n    }\n    console.log(\"<<<<< side-effect - selectedPaal\")\n  }, [selectedPaal])\n\n  const handleSubmit = (event) => {\n    console.log(\"handle form submit\")\n    const adhikaram = selectedAdhikaram[0]\n    console.log(`get kurals for adhikaram: ${adhikaram}`)\n    const kurals = getKurals(adhikaram.no)\n    console.log(`kurals: ${JSON.stringify(kurals)}`)\n    setKurals(kurals)\n    event.preventDefault()\n  }\n\n  const handlePaalChange = (values) => {\n    console.log(`handle paal change, values: ${values}`)\n    setSelectedPaal(values)\n    if (values.length) {\n      const [paal] = values\n      const adhikarams = getAdhikarams(paal)\n      console.log(`adhikarams for ${paal}: ${adhikarams}`)\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikarams[0]])\n    }\n  }\n\n  const renderKurals = () => (\n    kurals.map((k, idx) => (\n      <Row key={idx} className=\"my-3\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Row className=\"fs-5\">\n                <Col >\n                  <Badge bg=\"primary\">{`${KURAL} ${k.kuralNo}`}</Badge>\n                </Col>\n              </Row>\n              <Row className=\"my-3\">\n                <Col className=\"kural-text\">\n                  {k.kural}\n                </Col>\n              </Row>\n              <Tabs defaultActiveKey=\"0\" className=\"my-3\">\n                {k.explanations.map((e, idx) => (<Tab key={idx} eventKey={idx} title={e.author}>{e.explanation}</Tab>))}\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    ))\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-3\">\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col md={{ span: 4, offset: 1 }}>\n                <Form.Group>\n                  <Form.Label>{PAAL}</Form.Label>\n                  <Typeahead\n                    id=\"paal-selector\"\n                    onChange={handlePaalChange}\n                    options={paals}\n                    placeholder={PAAL}\n                    selected={selectedPaal !== null ? selectedPaal : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>{ADHIKARAM}</Form.Label>\n                  <Typeahead\n                    id=\"adhikaram-selector\"\n                    onChange={setSelectedAdhikaram}\n                    labelKey={(option) => `${option.no} - ${option.name}`}\n                    options={adhikarams}\n                    placeholder={ADHIKARAM}\n                    selected={selectedAdhikaram !== null ? selectedAdhikaram : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control as={Button} type=\"submit\">\n                    {SUBMIT}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n\n      {renderKurals()}\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Kurals\n","const randomInteger = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n\nconst shuffleItems = (array) => {\n  return array\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n}\n\nexport { randomInteger, shuffleItems }","import { KURALS_PER_ADHIKARAM_COUNT } from \"../constants\"\nimport thirukurals from \"../data/thirukurals.json\"\nimport { randomInteger } from \"../helpers\"\nimport { getAdhikaramsAndKurals } from \"./Thirukural\"\n\nconst getRandomKuralFrom = (adhikaramsAndKurals) => {\n  const randomAdhikaramIdx = randomInteger(0, adhikaramsAndKurals.length - 1)\n  const randomKuralIdx = randomInteger(0, KURALS_PER_ADHIKARAM_COUNT - 1)\n  console.log(`getting random kural, adhikaramIdx: ${randomAdhikaramIdx} kuralIdx: ${randomKuralIdx}`)\n  const { kurals, paal } = adhikaramsAndKurals[randomAdhikaramIdx]\n  const kural = kurals[randomKuralIdx]\n  return { ...kural, paal }\n}\n\nconst getRandomKurals = (kuralNoToSkip, paaltoUse, n = 3) => {\n  const adhikaramsAndKurals = getAdhikaramsAndKurals(paaltoUse)\n  const randomKurals = []\n  while (randomKurals.length < n) {\n    const randomKural = getRandomKuralFrom(adhikaramsAndKurals)\n    const foundIdx = randomKurals.findIndex((k) => k.kuralNo === randomKural.kuralNo)\n    console.log(`generating random kurals, randomKural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    if (randomKural.kuralNo !== kuralNoToSkip.kuralNo && foundIdx === -1) {\n      console.log(`choosing random kural: ${JSON.stringify(randomKural)}`)\n      randomKurals.push(randomKural)\n    } else {\n      console.log(`skipping random kural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    }\n  }\n  return randomKurals\n}\n\nconst getRandomExplanations = (paal, explanationAuthor, skipKuralNo, n = 3) => {\n  const randomKurals = getRandomKurals(skipKuralNo, paal, n)\n  console.log(`random kurals used for generating explanations: ${JSON.stringify(randomKurals)}`)\n  return randomKurals.reduce((accumulator, kural) => {\n    const explanation = getExplanationByAuthor(kural.explanations, explanationAuthor)\n    return accumulator.concat(explanation)\n  }, [])\n}\n\nconst getKural = (paals, adhikarams) => {\n  let filteredThirukurals = thirukurals\n  if (paals.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => paals.includes(thirukural.paal))\n  }\n  if (adhikarams.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => adhikarams.includes(thirukural.adhikaramName))\n  }\n  return getRandomKuralFrom(filteredThirukurals)\n}\n\nconst getExplanationByAuthor = (explanations, explanationAuthor) => (\n  explanations\n    .find((explanation) => explanation.author === explanationAuthor)\n    .explanation\n)\n\nexport { getKural, getRandomKurals, getRandomExplanations, getExplanationByAuthor }\n","import { shuffleItems } from \"../helpers\"\nimport { getExplanationByAuthor, getKural, getRandomExplanations } from \"./Quiz\"\n\nclass FindExplanationQuizGenerator {\n  constructor() {\n    this.answerKural = {}\n  }\n\n  getKural(paals, adhikarams, explanationAuthor) {\n    const { kuralNo, kural, paal, explanations } = getKural(paals, adhikarams)\n    const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n    this.answerKural = { kuralNo, paal, explanation, explanationAuthor }\n    return { kuralNo, kural }\n  }\n\n  getExplanations() {\n    const { kuralNo, paal, explanation, explanationAuthor } = this.answerKural\n    const incorrectExplanations = getRandomExplanations(paal, explanationAuthor, kuralNo)\n      .map((explanation) => ({ explanation, isCorrect: false }))\n    const correctExplanation = { explanation, isCorrect: true }\n    const explanations = shuffleItems([...incorrectExplanations, correctExplanation])\n    console.log(`shuffled explanations: ${JSON.stringify(explanations)}`)\n    return explanations\n  }\n}\n\nexport default FindExplanationQuizGenerator\n","import { useEffect, useState } from \"react\"\nimport { Accordion, Button, Col, Form, Row } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { ADHIKARAM, CLEAR, EXPLANATION, FILTERS, PAAL, SUBMIT } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport paals from \"../data/paals.json\"\nimport { getAdhikarams, getAllAdhikarams } from \"../service/Thirukural\"\n\nconst QuizFilters = (props) => {\n  const [selectedPaals, setSelectedPaals] = useState([])\n  const [selectedAdhikarams, setSelectedAdhikarams] = useState([])\n  const [selectedExplanationAuthor, setSelectedExplanationAuthor] = useState([props.defaultExplanationAuthor])\n  const [adhikarams, setAdhikarams] = useState(null)\n\n  useEffect(() => {\n    console.log(\">>>>> side-effect: adhikarams\")\n    if (!adhikarams) {\n      const allAdhikarams = getAllAdhikarams()\n      setAdhikarams(allAdhikarams)\n    }\n    console.log(\"<<<<< side-effect: adhikarams\")\n  }, [adhikarams])\n\n  const handleOnSubmit = (e) => {\n    console.log(\"handle filter form submit\")\n    props.onApply({\n      paals: selectedPaals,\n      adhikarams: selectedAdhikarams,\n      explanationAuthor: selectedExplanationAuthor[0]\n    })\n    e.preventDefault()\n  }\n\n  const handleClear = () => {\n    console.log(\"handle clear filter\")\n    setSelectedPaals([])\n    setSelectedAdhikarams([])\n    setSelectedExplanationAuthor([props.defaultExplanationAuthor])\n    setAdhikarams(null)\n  }\n\n  const handlePaalChange = (paals) => {\n    console.log(`handle paal change in filter, paals: ${paals}`)\n    const adhikarams = paals.reduce((accumulator, paal) => accumulator.concat(...getAdhikarams(paal)), [])\n    console.log(`handle paal change in filter, adhikarams: ${JSON.stringify(adhikarams)}`)\n    setSelectedPaals(paals)\n    setAdhikarams(adhikarams.length ? adhikarams : null)\n    setSelectedAdhikarams([])\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>{FILTERS}</Accordion.Header>\n            <Accordion.Body>\n              <Form onSubmit={handleOnSubmit}>\n                <Form.Group>\n                  <Form.Label>{PAAL}</Form.Label>\n                  <Typeahead\n                    id=\"paal-selector\"\n                    options={paals}\n                    placeholder={PAAL}\n                    selected={selectedPaals}\n                    onChange={handlePaalChange}\n                    multiple\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>{ADHIKARAM}</Form.Label>\n                  <Typeahead\n                    id=\"adhikaram-selector\"\n                    labelKey={(option) => `${option.no} - ${option.name}`}\n                    options={adhikarams ? adhikarams : []}\n                    placeholder={ADHIKARAM}\n                    selected={selectedAdhikarams}\n                    onChange={setSelectedAdhikarams}\n                    multiple\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>{EXPLANATION}</Form.Label>\n                  <Typeahead\n                    id=\"explanation-author-selector\"\n                    options={explanationAuthors}\n                    placeholder={EXPLANATION}\n                    selected={selectedExplanationAuthor}\n                    onChange={setSelectedExplanationAuthor}\n                  />\n                </Form.Group>\n                <Form.Group className=\"mt-3\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\">\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    type=\"button\"\n                    onClick={handleClear}\n                    className=\"mx-2\">\n                    <i className=\"bi bi-x\"></i> {CLEAR}\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      </Col>\n    </Row>\n  )\n}\n\nexport default QuizFilters","import { useEffect, useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Container, Form, Row } from \"react-bootstrap\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, CORRECT_EXPLANATION_MESSAGE, FIND_EXPLANATION, KURAL, NEXT, SUBMIT, WRONG_EXPLANATION_MESSAGE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport FindExplanationQuizGenerator from \"../service/FindExplanationQuizGenerator\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindExplanationQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const [selectedExplanation, setSelectedExplanation] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    paals: [],\n    adhikarams: [],\n    explanationAuthor: defaultExplanationAuthor\n  })\n\n  useTitle(`${FIND_EXPLANATION} | ${APP_NAME}`)\n\n  useEffect(() => {\n    console.log(\">>>>> side-effect - quiz\")\n    if (!quiz) {\n      const { paals, adhikarams, explanationAuthor } = filters\n      const quizGenerator = new FindExplanationQuizGenerator()\n      const { kural, kuralNo } = quizGenerator.getKural(paals, adhikarams.map(adhikaram => adhikaram.name), explanationAuthor)\n      console.log(`random kural: ${kuralNo} - ${kural}`)\n      const explanations = quizGenerator.getExplanations()\n      console.log(`random explanations: ${JSON.stringify(explanations)}`)\n      const quiz = { kuralNo, kural, explanations }\n      console.log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n      setSelectedExplanation(explanations[0].explanation)\n    }\n    console.log(\"<<<<< side-effect - quiz\")\n  }, [quiz, filters])\n\n  const handleOnSubmit = (e) => {\n    const correctExplanation = quiz.explanations.find((item) => item.isCorrect).explanation\n    console.log(`handle form submit,\n      selectedExplanation: ${JSON.stringify(selectedExplanation)}\n      correctExplanation: ${JSON.stringify(correctExplanation)}`)\n    setIsCorrectAnswer(selectedExplanation === correctExplanation)\n    setShowResult(true)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    console.log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setQuiz(null)\n  }\n\n  const handleApplyFilter = (data) => {\n    console.log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setFilters(data)\n    setQuiz(null)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{`${KURAL} ${quiz.kuralNo}`}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3\">\n          <Col>\n            <Form.Label className=\"kural-text\">{quiz.kural}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.explanations.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`explanation-option-${idx}`}\n              value={item.explanation}\n              name=\"explanations\"\n              type=\"radio\"\n              label={item.explanation}\n              onChange={(e) => setSelectedExplanation(e.target.value)}\n              defaultChecked={idx === 0}\n              className=\"mx-3\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{FIND_EXPLANATION}</h2>\n        </Col>\n      </Row>\n      <QuizFilters defaultExplanationAuthor={defaultExplanationAuthor} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_EXPLANATION_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_EXPLANATION_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button type=\"submit\" className=\"mx-2\">\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FindExplanationQuiz","import { shuffleItems } from \"../helpers\"\nimport { getExplanationByAuthor, getKural, getRandomKurals } from \"./Quiz\"\n\nclass FindKuralQuizGenerator {\n  constructor() {\n    this.answerKural = {}\n  }\n\n  getExplanation(paals, adhikarams, explanationAuthor) {\n    const { kuralNo, kural, paal, adhikaram, explanations } = getKural(paals, adhikarams)\n    const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n    this.answerKural = { kural, kuralNo, paal, adhikaram }\n    console.log(`answer kural: ${JSON.stringify(this.answerKural)}`)\n    return explanation\n  }\n\n  getKurals() {\n    const { kuralNo, kural, paal } = this.answerKural\n    const inCorrectKurals = getRandomKurals(kuralNo, paal)\n      .map(({ kural }) => ({ kural, isCorrect: false }))\n    const correctKural = { kural, isCorrect: true }\n    const kurals = shuffleItems([...inCorrectKurals, correctKural])\n    console.log(`shuffled kurals: ${JSON.stringify(kurals)}`)\n    return kurals\n  }\n}\n\nexport default FindKuralQuizGenerator\n","import { useEffect, useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Container, Form, Row } from \"react-bootstrap\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, CORRECT_KURAL_MESSAGE, EXPLANATION, FIND_KURAL, NEXT, SUBMIT, WRONG_KURAL_MESSAGE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport FindKuralQuizGenerator from \"../service/FindKuralQuizGenerator\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindKuralQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const [selectedKural, setSelectedKural] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    paals: [],\n    adhikarams: [],\n    explanationAuthor: defaultExplanationAuthor\n  })\n\n  useTitle(`${FIND_KURAL} | ${APP_NAME}`)\n\n  useEffect(() => {\n    console.log(\">>>>> side-effect - quiz\")\n    if (!quiz) {\n      const { paals, adhikarams, explanationAuthor } = filters\n      const quizGenerator = new FindKuralQuizGenerator()\n      const explanation = quizGenerator.getExplanation(paals, adhikarams.map(adhikaram => adhikaram.name), explanationAuthor)\n      console.log(`random explanation: ${explanation}`)\n      const kurals = quizGenerator.getKurals()\n      console.log(`random kurals: ${kurals}`)\n      const quiz = { kurals, explanation }\n      console.log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n      setSelectedKural(kurals[0].kural)\n    }\n    console.log(\"<<<<< side-effect - quiz\")\n  }, [quiz, filters])\n\n  const handleOnSubmit = (e) => {\n    const correctKural = quiz.kurals.find((item) => item.isCorrect).kural\n    console.log(`handle form submit,\n      selectedKural: ${JSON.stringify(selectedKural)}\n      correctKural: ${JSON.stringify(correctKural)}`)\n    setIsCorrectAnswer(selectedKural === correctKural)\n    setShowResult(true)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    console.log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setQuiz(null)\n  }\n\n  const handleApplyFilter = (data) => {\n    console.log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setFilters(data)\n    setQuiz(null)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{EXPLANATION}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3 fs-5\">\n          <Col>\n            <Form.Label>{quiz.explanation}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.kurals.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`kural-option-${idx}`}\n              value={item.kural}\n              name=\"kurals\"\n              type=\"radio\"\n              label={item.kural}\n              onChange={(e) => setSelectedKural(e.target.value)}\n              defaultChecked={idx === 0}\n              className=\"fs-6 mx-3 kural-text\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{FIND_KURAL}</h2>\n        </Col>\n      </Row>\n      <QuizFilters defaultExplanationAuthor={defaultExplanationAuthor} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_KURAL_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_KURAL_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button type=\"submit\" className=\"mx-2\">\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FindKuralQuiz","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Kurals from \"./Kurals\"\nimport FindExplanationQuiz from \"./FindExplanationQuiz\"\nimport FindKuralQuiz from \"./FindKuralQuiz\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={Kurals} />\n      <Route exact path=\"/quiz/findExplanation\" component={FindExplanationQuiz} />\n      <Route exact path=\"/quiz/findKural\" component={FindKuralQuiz} />\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import { React } from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { APP_NAME, FIND_EXPLANATION, FIND_KURAL, QUIZ } from \"../constants\"\n\nconst Header = () => {\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\">{APP_NAME}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavDropdown title={QUIZ}>\n                <NavDropdown.Item href=\"/quiz/findExplanation\">{FIND_EXPLANATION}</NavDropdown.Item>\n                <NavDropdown.Item href=\"/quiz/findKural\">{FIND_KURAL}</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav>\n              <Nav.Link\n                target=\"_blank\"\n                href=\"https://github.com/thirukural-karpom/thirukural-karpom\"\n                className=\"py-0\">\n                <i className=\"bi bi-github fs-4\"></i>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactGA from \"react-ga\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./components/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"./scss/index.scss\"\n\nReactGA.initialize(\"G-R7JH6CHB76\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}